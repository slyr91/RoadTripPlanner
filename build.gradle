plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
  id 'org.jetbrains.kotlin.jvm' version '1.9.23'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.0'
  h2Version = '2.2.224'
  gsonVersion = '2.10.1'
  okHttpVersion = '4.12.0'
  kotlinStdVersion = '1.9.22'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'org.example.roadtripplanner'
  mainClass = 'org.example.roadtripplanner.HelloApplication'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  implementation("com.h2database:h2:${h2Version}")
  implementation("com.google.code.gson:gson:${gsonVersion}")
  implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
  implementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.23")
  implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
  implementation('org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1')

}

test {
useJUnitPlatform()}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

//------------------------------------------------------------------------------
// Configure "dev" sourceset for running Scratch class
//------------------------------------------------------------------------------

// Create new dev sourceset with a compile and runtime classpath dependency
// on the main sourceset. This allows us to use the classes we create in
// the main sourceset in our dev sourceset.
// The directories src/dev/java and src/dev/resources are recognized
// for this sourceset.
sourceSets.create("dev") {
  compileClasspath += sourceSets.main.output
  runtimeClasspath += sourceSets.main.output
}

// Create a new task "runDev" that will run the compiled Scratch.java file
// in the root of src/dev/java. The classpath will contain all dependencies
// from the devImplementation and devRuntimeOnly configurations.
tasks.register("runDev", JavaExec) {
  description = "Run Scratch file."
  group = "dev"
  classpath = sourceSets.dev.runtimeClasspath
  mainClass = "Scratch"
}

dependencies {
  devImplementation("com.google.code.gson:gson:${gsonVersion}")
}